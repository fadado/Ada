--RM 06 Subprograms

SUBPROGRAM_DECLARATION ::=
   [OVERRIDING_INDICATOR]
   SUBPROGRAM_SPECIFICATION
      [ASPECT_SPECIFICATION];

SUBPROGRAM_SPECIFICATION ::=
     PROCEDURE_SPECIFICATION | FUNCTION_SPECIFICATION

PROCEDURE_SPECIFICATION ::=
   procedure DEFINING_PROGRAM_UNIT_NAME PARAMETER_PROFILE

FUNCTION_SPECIFICATION ::=
   function DEFINING_DESIGNATOR PARAMETER_AND_RESULT_PROFILE

DESIGNATOR ::= [PARENT_UNIT_NAME.] IDENTIFIER | OPERATOR_SYMBOL

DEFINING_DESIGNATOR ::=
     DEFINING_PROGRAM_UNIT_NAME | DEFINING_OPERATOR_SYMBOL

DEFINING_PROGRAM_UNIT_NAME ::= [PARENT_UNIT_NAME.] DEFINING_IDENTIFIER

OPERATOR_SYMBOL ::= STRING_LITERAL

DEFINING_OPERATOR_SYMBOL ::= OPERATOR_SYMBOL

PARAMETER_PROFILE ::= [FORMAL_PART]

PARAMETER_AND_RESULT_PROFILE ::=
     [FORMAL_PART] return [NULL_EXCLUSION] SUBTYPE_MARK
   | [FORMAL_PART] return ACCESS_DEFINITION

FORMAL_PART ::= (PARAMETER_SPECIFICATION {; PARAMETER_SPECIFICATION})

PARAMETER_SPECIFICATION ::=
     DEFINING_IDENTIFIER_LIST :
        [aliased] MODE [NULL_EXCLUSION] SUBTYPE_MARK
           [:= DEFAULT_EXPRESSION] [ASPECT_SPECIFICATION]
   | DEFINING_IDENTIFIER_LIST :
        ACCESS_DEFINITION
           [:= DEFAULT_EXPRESSION] [ASPECT_SPECIFICATION]

MODE ::= [in] | in out | out

GLOBAL_ASPECT_DEFINITION ::=
     null
   | `Unspecified`
   | GLOBAL_MODE GLOBAL_DESIGNATOR
   | (GLOBAL_ASPECT_ELEMENT {; GLOBAL_ASPECT_ELEMENT})

GLOBAL_ASPECT_ELEMENT ::=
     GLOBAL_MODE GLOBAL_SET
   | GLOBAL_MODE all
   | GLOBAL_MODE synchronized

GLOBAL_MODE ::= BASIC_GLOBAL_MODE | EXTENDED_GLOBAL_MODE

BASIC_GLOBAL_MODE ::= in | in out | out

GLOBAL_SET ::= GLOBAL_NAME {, GLOBAL_NAME}

GLOBAL_DESIGNATOR ::= all | synchronized | GLOBAL_NAME

GLOBAL_NAME ::= object_NAME | package_NAME

SUBPROGRAM_BODY ::=
   [OVERRIDING_INDICATOR]
   SUBPROGRAM_SPECIFICATION [ASPECT_SPECIFICATION] is
      DECLARATIVE_PART
   begin
      HANDLED_SEQUENCE_OF_STATEMENTS
   end [DESIGNATOR];

PROCEDURE_CALL_STATEMENT ::=
     procedure_NAME;
   | procedure_PREFIX ACTUAL_PARAMETER_PART;

FUNCTION_CALL ::=
     function_NAME
   | function_PREFIX ACTUAL_PARAMETER_PART

ACTUAL_PARAMETER_PART ::=
   (PARAMETER_ASSOCIATION {, PARAMETER_ASSOCIATION})

PARAMETER_ASSOCIATION ::=
   [formal_parameter_SELECTOR_NAME =>] EXPLICIT_ACTUAL_PARAMETER

EXPLICIT_ACTUAL_PARAMETER ::= EXPRESSION | variable_NAME

SIMPLE_RETURN_STATEMENT ::= return [EXPRESSION];

EXTENDED_RETURN_OBJECT_DECLARATION ::=
   DEFINING_IDENTIFIER : [aliased] [constant]
      RETURN_SUBTYPE_INDICATION [:= EXPRESSION]
      [ASPECT_SPECIFICATION]

EXTENDED_RETURN_STATEMENT ::=
   return EXTENDED_RETURN_OBJECT_DECLARATION [do
      HANDLED_SEQUENCE_OF_STATEMENTS
   end return];

RETURN_SUBTYPE_INDICATION ::= SUBTYPE_INDICATION | ACCESS_DEFINITION

NULL_PROCEDURE_DECLARATION ::=
   [OVERRIDING_INDICATOR]
   PROCEDURE_SPECIFICATION is null
      [ASPECT_SPECIFICATION];

EXPRESSION_FUNCTION_DECLARATION ::=
     [OVERRIDING_INDICATOR]
     FUNCTION_SPECIFICATION is
        (EXPRESSION)
        [ASPECT_SPECIFICATION];
   | [OVERRIDING_INDICATOR]
     FUNCTION_SPECIFICATION is
        AGGREGATE
        [ASPECT_SPECIFICATION];

-- vim:ts=3:sw=3:et:syntax=ada
