--RM 12 Generic Units

GENERIC_DECLARATION ::=
   GENERIC_SUBPROGRAM_DECLARATION | GENERIC_PACKAGE_DECLARATION

GENERIC_SUBPROGRAM_DECLARATION ::=
   GENERIC_FORMAL_PART SUBPROGRAM_SPECIFICATION
      [ASPECT_SPECIFICATION];

GENERIC_PACKAGE_DECLARATION ::=
   GENERIC_FORMAL_PART PACKAGE_SPECIFICATION;

GENERIC_FORMAL_PART ::=
   generic {GENERIC_FORMAL_PARAMETER_DECLARATION | USE_CLAUSE}

GENERIC_FORMAL_PARAMETER_DECLARATION ::=
     FORMAL_OBJECT_DECLARATION
   | FORMAL_TYPE_DECLARATION
   | FORMAL_SUBPROGRAM_DECLARATION
   | FORMAL_PACKAGE_DECLARATION

GENERIC_INSTANTIATION ::=
     package DEFINING_PROGRAM_UNIT_NAME is
        new generic_package_NAME [GENERIC_ACTUAL_PART]
        [ASPECT_SPECIFICATION];
   | [OVERRIDING_INDICATOR]
     procedure DEFINING_PROGRAM_UNIT_NAME is
        new generic_procedure_NAME [GENERIC_ACTUAL_PART]
        [ASPECT_SPECIFICATION];
   | [OVERRIDING_INDICATOR]
     function DEFINING_DESIGNATOR is
        new generic_function_NAME [GENERIC_ACTUAL_PART]
        [ASPECT_SPECIFICATION];

GENERIC_ACTUAL_PART ::= (GENERIC_ASSOCIATION {, GENERIC_ASSOCIATION})

GENERIC_ASSOCIATION ::=
   [generic_formal_parameter_SELECTOR_NAME =>]
      EXPLICIT_GENERIC_ACTUAL_PARAMETER

EXPLICIT_GENERIC_ACTUAL_PARAMETER ::=
     EXPRESSION
   | variable_NAME
   | subprogram_NAME
   | entry_NAME
   | SUBTYPE_MARK
   | package_instance_NAME

FORMAL_OBJECT_DECLARATION ::=
     DEFINING_IDENTIFIER_LIST :
        MODE [NULL_EXCLUSION] SUBTYPE_MARK [:= DEFAULT_EXPRESSION]
        [ASPECT_SPECIFICATION];
   | DEFINING_IDENTIFIER_LIST :
        MODE ACCESS_DEFINITION [:= DEFAULT_EXPRESSION]
        [ASPECT_SPECIFICATION];

FORMAL_TYPE_DECLARATION ::=
     FORMAL_COMPLETE_TYPE_DECLARATION
   | FORMAL_INCOMPLETE_TYPE_DECLARATION

FORMAL_COMPLETE_TYPE_DECLARATION ::=
   type DEFINING_IDENTIFIER [DISCRIMINANT_PART] is
      FORMAL_TYPE_DEFINITION
      [or use default_SUBTYPE_MARK] [ASPECT_SPECIFICATION];

FORMAL_INCOMPLETE_TYPE_DECLARATION ::=
   type DEFINING_IDENTIFIER [DISCRIMINANT_PART] [is tagged]
      [or use default_SUBTYPE_MARK];

FORMAL_TYPE_DEFINITION ::=
     FORMAL_PRIVATE_TYPE_DEFINITION
   | FORMAL_DERIVED_TYPE_DEFINITION
   | FORMAL_DISCRETE_TYPE_DEFINITION
   | FORMAL_SIGNED_INTEGER_TYPE_DEFINITION
   | FORMAL_MODULAR_TYPE_DEFINITION
   | FORMAL_FLOATING_POINT_DEFINITION
   | FORMAL_ORDINARY_FIXED_POINT_DEFINITION
   | FORMAL_DECIMAL_FIXED_POINT_DEFINITION
   | FORMAL_ARRAY_TYPE_DEFINITION
   | FORMAL_ACCESS_TYPE_DEFINITION
   | FORMAL_INTERFACE_TYPE_DEFINITION

FORMAL_PRIVATE_TYPE_DEFINITION ::= [[abstract] tagged] [limited] private

FORMAL_DERIVED_TYPE_DEFINITION ::=
   [abstract] [limited | synchronized]
      new SUBTYPE_MARK [[and INTERFACE_LIST] with private]

FORMAL_DISCRETE_TYPE_DEFINITION ::= (<>)

FORMAL_SIGNED_INTEGER_TYPE_DEFINITION ::= RANGE <>

FORMAL_MODULAR_TYPE_DEFINITION ::= mod <>

FORMAL_FLOATING_POINT_DEFINITION ::= digits <>

FORMAL_ORDINARY_FIXED_POINT_DEFINITION ::= delta <>

FORMAL_DECIMAL_FIXED_POINT_DEFINITION ::= delta <> digits <>

FORMAL_ARRAY_TYPE_DEFINITION ::= ARRAY_TYPE_DEFINITION

FORMAL_ACCESS_TYPE_DEFINITION ::= ACCESS_TYPE_DEFINITION

FORMAL_INTERFACE_TYPE_DEFINITION ::= INTERFACE_TYPE_DEFINITION

FORMAL_SUBPROGRAM_DECLARATION ::=
     FORMAL_CONCRETE_SUBPROGRAM_DECLARATION
   | FORMAL_ABSTRACT_SUBPROGRAM_DECLARATION

FORMAL_CONCRETE_SUBPROGRAM_DECLARATION ::=
   with SUBPROGRAM_SPECIFICATION [is SUBPROGRAM_DEFAULT]
      [ASPECT_SPECIFICATION];

FORMAL_ABSTRACT_SUBPROGRAM_DECLARATION ::=
   with SUBPROGRAM_SPECIFICATION is abstract [SUBPROGRAM_DEFAULT]
      [ASPECT_SPECIFICATION];

SUBPROGRAM_DEFAULT ::= DEFAULT_NAME | <> | null

DEFAULT_NAME ::= NAME

FORMAL_PACKAGE_DECLARATION ::=
   with package DEFINING_IDENTIFIER is
      new generic_package_NAME FORMAL_PACKAGE_ACTUAL_PART
      [ASPECT_SPECIFICATION];

FORMAL_PACKAGE_ACTUAL_PART ::=
     ([others =>] <>)
   | [GENERIC_ACTUAL_PART]
   | (FORMAL_PACKAGE_ASSOCIATION {, FORMAL_PACKAGE_ASSOCIATION} [, others => <>])

FORMAL_PACKAGE_ASSOCIATION ::=
     GENERIC_ASSOCIATION
   | generic_formal_parameter_SELECTOR_NAME => <>

-- vim:ts=3:sw=3:et:syntax=ada
